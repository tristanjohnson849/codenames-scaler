{"version":3,"sources":["img/rotate-image.svg","BoardForm/CollapseButton.tsx","BoardView/SingleBoardView.tsx","BoardView/BoardSection.tsx","BoardView/index.tsx","BoardForm/BasicInput.tsx","BoardForm/InputCard.tsx","BoardForm/RadioInput.tsx","BoardForm/SeedInput.tsx","BoardForm/BoardForm.tsx","BoardEncoding.ts","img/copy.svg","img/share.svg","LinkSharer.tsx","BoardGenerator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["_g","_g2","_g3","_g4","_g5","_g6","_g7","_g8","_g9","_g10","_g11","_g12","_g13","_g14","_g15","_g16","COLLAPSIBLE_EASING","COLLAPSIBLE_TIME","CollapseButton","isOpen","label","closeLabelOnOpen","style","position","fontSize","cursor","marginLeft","marginBottom","undefined","trigger","open","transitionTime","easing","padding","top","right","display","transition","transform","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRotateImage","_ref","svgRef","title","titleId","props","id","xmlns","xmlnsXlink","x","y","width","height","viewBox","enableBackground","xmlSpace","fill","ref","d","ForwardRef","RotateButton","rotate","counterClockwise","onClick","HLight","isTop","resetRotation","color","lightColor","typeToColor","bottom","left","margin","borderRadius","background","zIndex","VLight","isLeft","SingleBoardView","cards","startColor","useState","boardRotation","setBoardRotation","prevRotation","maxWidth","minWidth","aspectRatio","border","boxShadow","transitionTimingFunction","flex","flexDirection","map","row","colIndex","cellType","rowIndex","BoardSection","teamName","defaultOpen","isBoardOpen","setIsBoardOpen","tabIndex","handleTriggerClick","window","confirm","containerElementProps","PAGE_SECTION_STYLE","Blue","Red","Bystander","Assassin","DuetCorrect","DuetBoardView","info","cell","item","BoardView","layout","mode","BasicInput","value","defaultValue","inputProps","useControllableState","inputValue","setInputValue","type","linkButtonStyle","onChange","e","InputCard","children","paddingLeft","paddingBottom","RadioInput","labels","checkedLabel","setCheckedLabel","marginRight","checked","SeedInput","randomSeed","seed","setSeed","newSeed","fontFamily","textDecoration","defaultFormValues","Standard","boardRows","boardColumns","startCards","assassins","Duet","suggestedCards","rows","columns","gameMode","Math","floor","suggestedAssassins","random","toString","slice","initialValue","stateValue","BoardForm","formData","setFormData","startValues","proxyGameMode","setProxyGameMode","_setGameMode","setRows","setColumns","setCards","setStartCards","setAssassins","setStartColor","newSeedOnGenerate","setNewSeedOnGenerate","closeConfigOnGenerate","setCloseConfigOnGenerate","error","setError","errorKey","setErrorKey","isCollapsibleOpen","setIsCollapsibleOpen","resetFormInputs","setResetFormInputs","onTriggerOpening","onTriggerClosing","onSubmit","preventDefault","prev","FormData","currentTarget","entries","k","v","test","parseInt","totalCards","configuredCards","flexWrap","name","onClose","newMode","defaults","setGameMode","animationName","animationDuration","animationFillMode","marginTop","WRITE_VERSION","v1FormDataKeys","sort","v2FormDataKeys","formDataKeys","encodeFormData","orderedValues","k1","k2","localeCompare","btoa","JSON","stringify","v1DecodeFormData","maybeFormData","decodeWithKeys","validate","v2DecodeFormData","orderedKeys","ret","forEach","isValidFormData","isNaN","getStartColor","seededRandomInt","createLayout","createStandardLayout","createDuetLayout","rand","actualStartColor","blueCards","redCards","flatLayout","Array","step","_fill","shuffle","chunk","bothCorrect","correctAssassins","min","correctBystanders","remainderAfterCorrect","remainingAssassins","bystanderAssassins","bothAssassins","arr","start","end","j","seedrandom","max","SvgCopy","points","SvgShare","iconStyle","paddingTop","LinkSharer","copied","setCopied","alignItems","justifyContent","disabled","location","href","navigator","clipboard","writeText","whiteSpace","textAlign","share","text","url","flexGrow","BoardGenerator","slug","useParams","initialFormData","version","parse","atob","decodeFormData","navigate","useNavigate","setFormDataAndHash","newFormData","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48ca9d96.chunk.js","sourcesContent":["var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRotateImage(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"509.823px\",\n    height: \"509.822px\",\n    viewBox: \"0 0 509.823 509.822\",\n    style: {\n      enableBackground: \"new 0 0 509.823 509.822\"\n    },\n    xmlSpace: \"preserve\",\n    fill: \"#EEE\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M509.823,254.911c0,140.559-114.354,254.911-254.911,254.911C114.353,509.822,0,395.47,0,254.911h44.97 c0,115.758,94.182,209.949,209.942,209.949c115.757,0,209.938-94.191,209.938-209.949c0-115.76-94.182-209.941-209.938-209.941 c-50.893,0-99.505,18.291-137.719,51.558l45.908,45.903L20.507,165.208L43.283,22.633l42.057,42.05 C132.097,22.972,192.071,0,254.912,0C395.469,0,509.823,114.353,509.823,254.911z M409.653,251.164L255.002,96.513L100.347,251.164 l154.655,154.652L409.653,251.164z\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRotateImage);\nexport default __webpack_public_path__ + \"static/media/rotate-image.0b60d7c6.svg\";\nexport { ForwardRef as ReactComponent };","import Collapsible from \"react-collapsible\";\n\ninterface CollapseButtonProps {\n    isOpen: boolean;\n    label?: string;\n    closeLabelOnOpen?: boolean\n}\n\nexport const COLLAPSIBLE_EASING = \"cubic-bezier(.5,.9,.2,1.0)\";\nexport const COLLAPSIBLE_TIME = 400;\n\nconst CollapseButton = ({isOpen, label, closeLabelOnOpen = true}: CollapseButtonProps) => {\n    return (\n        <div style={{ \n            position: 'relative',\n            fontSize: '24px',\n            cursor: 'pointer',\n            marginLeft: '16px',\n            marginBottom: isOpen && !closeLabelOnOpen ? '16px' : undefined\n        }}>\n            {closeLabelOnOpen \n                ? <Collapsible\n                    trigger=\"\"\n                    open={!isOpen}\n                    transitionTime={COLLAPSIBLE_TIME}\n                    easing={COLLAPSIBLE_EASING}\n                >{label}</Collapsible>\n                : label\n            }\n            <div\n                style={{\n                    position: 'absolute',\n                    padding: '8px',\n                    top: '-12px',\n                    right: '2px',\n                    display: 'block',\n                    transition: 'transform 300ms',\n                    transform: isOpen ? 'rotateZ(180deg)' : ''\n                }}\n            >⋁</div>\n        </div>\n    );\n}\n\nexport default CollapseButton;","import React, { CSSProperties, useState } from \"react\";\nimport { COLLAPSIBLE_EASING, COLLAPSIBLE_TIME } from \"../BoardForm/CollapseButton\";\nimport { CardType, typeToColor } from \"./index\";\nimport { ReactComponent as RotateCounterClockwiseIcon } from '../img/rotate-image.svg';\n\n\nconst SingleBoardView: React.FC<{ cards: CardType[][]; startColor: CardType; }> = ({ cards, startColor }) => {\n    const [boardRotation, setBoardRotation] = useState<number>(0);\n\n    const rotate = (counterClockwise: boolean) => setBoardRotation(prevRotation => counterClockwise\n        ? prevRotation - 90\n        : prevRotation + 90\n    );\n    // subtract rotation % 360 for correcct animations, if used 0 would spin through all rotations\n    const resetRotation = () => setBoardRotation(prevRotation => prevRotation - (prevRotation % 360));\n    return (\n        <div style={{\n            position: 'relative',\n            padding: '0 48px'\n        }}>\n            <div style={{\n                position: 'relative',\n                display: 'flex',\n                maxWidth: '720px',\n                minWidth: '424px',\n                aspectRatio: '1 / 1',\n                margin: '18px auto',\n                padding: '32px',\n                background: '#434343',\n                borderRadius: '12px',\n                border: '1px solid #777',\n                boxShadow: '8px 8px 12px #2b2b2b',\n                transform: `rotate(${boardRotation}deg)`,\n                transition: `transform ${COLLAPSIBLE_TIME}ms`,\n                transitionTimingFunction: COLLAPSIBLE_EASING\n            }}>\n                <HLight isTop={true} color={startColor} resetRotation={resetRotation} />\n                <HLight isTop={false} color={startColor} />\n                <VLight isLeft={true} color={startColor} />\n                <VLight isLeft={false} color={startColor} />\n                <div style={{\n                    minWidth: '360px',\n                    flex: 1,\n                    aspectRatio: '1 / 1',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    borderRadius: '12px',\n                    background: '#2b2b2b',\n                    border: '1px solid #777',\n                    padding: '8px'\n                }}>\n                    {cards.map((row, colIndex) => <div key={colIndex} style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        flex: 1\n                    }}>\n                        {row.map((cellType, rowIndex) => <div key={`${colIndex}-${rowIndex}`} style={{\n                            flex: 1,\n                            background: typeToColor[cellType],\n                            margin: '4px',\n                            borderRadius: '12px',\n                            boxShadow: '6px 6px 8px #1c1c1c',\n                            border: '1px solid #555'\n                        }} />\n                        )}\n                    </div>\n                    )}\n                </div>\n            </div>\n            <RotateButton rotate={rotate} counterClockwise={true} style={{ position: 'absolute', bottom: '8px', left: '8px' }} />\n            <RotateButton rotate={rotate} counterClockwise={false} style={{ position: 'absolute', bottom: '8px', right: '8px' }} />\n        </div>\n    );\n};\n\ninterface RotateButtonProps {\n    rotate: (counterClockwise: boolean) => void;\n    counterClockwise?: boolean;\n    style?: CSSProperties;\n}\n\nexport const RotateButton: React.FC<RotateButtonProps> = ({ \n    rotate,\n    counterClockwise = true, \n    style={}\n}) => {\n    return (\n        <RotateCounterClockwiseIcon \n            onClick={() => rotate(counterClockwise)}\n            style={{\n                width: '24px',\n                height: '24px',\n                transform: counterClockwise ? '': 'scaleX(-1)',\n                cursor: 'pointer',\n                ...style\n            }} \n        />\n    );\n}\n\nexport const HLight: React.FC<{ isTop: boolean, color?: CardType, resetRotation?: () => void }> = ({ isTop, resetRotation = null, color = 'Bystander' }) => {\n    const lightColor = typeToColor[color];\n    return (<>\n        <div style={{\n            position: 'absolute',\n            top: isTop ? 0 : undefined,\n            bottom: isTop ? undefined : 0,\n            left: '40%',\n            height: '32px',\n            width: '20%',\n            margin: 'auto',\n            transform: `perspective(10px) rotateX(${isTop ? '-' : ''}1deg)`,\n            borderRadius: isTop ? '4px 4px 8px 8px' : '8px 8px 4px 4px',\n            background: `linear-gradient(to right, ${lightColor} 5%, #FFF 45%, #FFF 55%, ${lightColor} 95%)`,\n            zIndex: 2\n        }}/>\n        {resetRotation && (\n            <div \n                style={{\n                    position: 'absolute',\n                    top: isTop ? 0 : undefined,\n                    bottom: isTop ? undefined : 0,\n                    left: '35%',\n                    height: '32px',\n                    width: '30%',\n                    margin: 'auto',\n                    zIndex: 1,\n                    cursor: 'pointer'\n                }} \n                onClick={resetRotation}\n            >\n                <div style={{\n                    width: '100%',\n                    transform: `perspective(10px) rotateX(${isTop ? '-' : ''}1deg)`,\n                    borderRadius: isTop ? '4px 4px 8px 8px' : '8px 8px 4px 4px',\n                    background: `#363636`,\n                    height: '32px',\n                }}/>\n                <div style={{ position: 'absolute', transform: 'rotateZ(180deg)', left: '8px', top: '4px'}}>⋁</div>\n                <div style={{ position: 'absolute', transform: 'rotateZ(180deg)', right: '8px', top: '4px'}}>⋁</div>\n            </div>\n        )}\n    </>);\n};\n\nexport const VLight: React.FC<{ isLeft: boolean, color?: CardType }> = ({ isLeft, color = 'Bystander' }) => {\n    const lightColor = typeToColor[color];\n    return <div style={{\n        position: 'absolute',\n        left: isLeft ? 0 : undefined,\n        right: isLeft ? undefined : 0,\n        top: '40%',\n        height: '20%',\n        width: '32px',\n        margin: 'auto',\n        transform: `perspective(10px) rotateY(${isLeft ? '' : '-'}1deg)`,\n        borderRadius: isLeft ? '4px 8px 8px 4px' : '8px 4px 4px 8px',\n        background: `linear-gradient(to bottom, ${lightColor} 5%, #FFF 45%, #FFF 55%, ${lightColor} 95%)`,\n    }} />\n};\n\nexport default SingleBoardView;","import React, { useState } from \"react\";\nimport Collapsible from \"react-collapsible\";\nimport CollapseButton from \"../BoardForm/CollapseButton\";\nimport { PAGE_SECTION_STYLE } from \"../BoardGenerator\";\nimport SingleBoardView from \"./SingleBoardView\";\nimport { CardType } from \"./index\";\n\ninterface BoardSectionProps {\n    teamName: string;\n    cards: CardType[][];\n    startColor: CardType;\n    defaultOpen?: boolean;\n}\nconst BoardSection: React.FC<BoardSectionProps> = ({ teamName, cards, startColor, defaultOpen = false }) => {\n    const [isBoardOpen, setIsBoardOpen] = useState<boolean>(defaultOpen);\n    return <Collapsible\n        tabIndex={0}\n        trigger={<CollapseButton label={teamName} isOpen={isBoardOpen} closeLabelOnOpen={false} />}\n        open={isBoardOpen}\n        handleTriggerClick={() => {\n            if (!isBoardOpen && window.confirm(`For ${teamName}'s eyes only - are you sure?`)) {\n                setIsBoardOpen(true);\n            }\n            if (isBoardOpen) {\n                setIsBoardOpen(false);\n            }\n        } }\n        containerElementProps={{\n            style: PAGE_SECTION_STYLE\n        }}\n    >\n        <SingleBoardView cards={cards} startColor={startColor} />\n    </Collapsible>;\n};\n\nexport default BoardSection;","import React from \"react\";\nimport { BoardLayout } from \"../BoardEncoding\";\nimport { PAGE_SECTION_STYLE } from \"../BoardGenerator\";\nimport BoardSection from \"./BoardSection\";\n\n\nexport type CardType = 'Blue' | 'Red' | 'Bystander' | 'Assassin' | 'DuetCorrect';\n\nexport interface BoardProps {\n    layout: BoardLayout<CardType | CardType[]>;\n};\n\nexport const typeToColor: { [K in CardType]: string } = {\n    Blue: '#268bad',\n    Red: '#c9461d',\n    Bystander: '#af926e',\n    Assassin: '#1b1b1b',\n    DuetCorrect: '#4CBB17'\n}\n\nconst BoardView: React.FC<BoardProps> = ({layout: { cards, mode, startColor, info }}) => (\n    mode === 'Standard'\n        ? <BoardSection defaultOpen={true} teamName=\"Codemasters\" startColor={startColor} cards={cards as CardType[][]}/>\n        : <DuetBoardView cards={cards as CardType[][][]} info={info}/>\n);\n\nconst DuetBoardView: React.FC<{cards: CardType[][][], info?: string[]}> = ({ cards, info}) => {\n    return (\n        <>\n            <BoardSection teamName=\"Team 1\" startColor=\"DuetCorrect\" cards={cards.map(row => row.map(cell => cell[0]))}/>\n            <BoardSection teamName=\"Team 2\" startColor=\"DuetCorrect\" cards={cards.map(row => row.map(cell => cell[1]))}/>\n            {info && <div style={PAGE_SECTION_STYLE}>\n                <h3>Board Info</h3>\n                <ul>\n                    {info.map(item => <li style={{ margin: '8px 0'}}>{item}</li>)}\n                </ul>\n            </div>}\n        </>\n    );\n};\n\nexport default BoardView;\n","import React from \"react\";\nimport { useControllableState, linkButtonStyle } from \"./BoardForm\";\n\nexport const BasicInput: React.FC<{ label: string; } & React.ComponentProps<\"input\">> = ({ label, value, defaultValue, ...inputProps }) => {\n    const [inputValue, setInputValue] = useControllableState(value, defaultValue || '');\n\n    return (\n        <label style={{ display: 'flex', flexDirection: 'column', margin: '8px' }}>\n            <span>{label} {defaultValue !== undefined && (\n                <button\n                    type=\"button\"\n                    style={{ ...linkButtonStyle, color: '#888', fontSize: '14px' }}\n                    onClick={() => {\n                        setInputValue(defaultValue);\n                        // @ts-ignore\n                        inputProps.onChange && inputProps.onChange({ target: { value: defaultValue } });\n                    }}\n                >\n                    Suggested: {defaultValue}\n                </button>\n            )}</span>\n            <input\n                {...inputProps}\n                value={inputValue}\n                onChange={(e) => {\n                    setInputValue(e.target.value);\n                    inputProps.onChange && inputProps.onChange(e);\n                }} />\n        </label>\n    );\n};\n","import React, { CSSProperties } from \"react\";\n\n\nexport interface InputCardProps {\n    title: string;\n    style?: CSSProperties;\n}\n\nexport const InputCard: React.FC<InputCardProps> = ({ title, style = {}, children }) => {\n    return (\n        <div style={{ marginLeft: '24px', marginBottom: '24px', maxWidth: '33%', minWidth: '180px', ...style }}>\n            <div style={{ paddingLeft: '16px', paddingBottom: '8px' }}><b>{title}</b></div>\n            <div style={{\n                border: '1px solid #555',\n                padding: '16px',\n                borderRadius: '16px',\n                boxShadow: '6px 6px 8px #2b2b2b',\n            }}>\n                {children}\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useControllableState, linkButtonStyle } from \"./BoardForm\";\n\nexport const RadioInput: React.FC<{ title?: string; labels: string[]; } & React.ComponentProps<\"input\">> = ({ title, labels, value, defaultValue, onChange, ...inputProps }) => {\n    const [checkedLabel, setCheckedLabel] = useControllableState(value, defaultValue || labels[0]);\n\n    return (\n        <div>\n            {(title || defaultValue !== undefined) && <>\n                <div>\n                    {title}\n                    {defaultValue !== undefined && (\n                        <button\n                            type=\"button\"\n                            style={{ ...linkButtonStyle, color: '#888', fontSize: '14px' }}\n                            onClick={() => {\n                                // @ts-ignore\n                                onChange && onChange({ target: { value: defaultValue } });\n                                setCheckedLabel(defaultValue);\n                            }}\n                        >\n                            Suggested: {defaultValue}\n                        </button>\n                    )}\n                </div>\n                <hr />\n            </>}\n            {labels.map((label) => (\n                <label style={{ marginRight: '6px' }}>{label}\n                    <input\n                        type=\"radio\"\n                        value={label}\n                        checked={label === checkedLabel}\n                        onChange={(e) => {\n                            setCheckedLabel(label);\n                            onChange && onChange(e);\n                        }}\n                        {...inputProps} />\n                </label>\n            ))}\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useControllableState, randomSeed, linkButtonStyle } from \"./BoardForm\";\n\nexport const SeedInput: React.FC<React.ComponentProps<\"input\">> = ({ key, value, onChange, ...inputProps }) => {\n    const [seed, setSeed] = useControllableState(value, randomSeed());\n\n    return (\n        <div>\n            <div>\n                Seed\n                <button\n                    type=\"button\"\n                    style={{ ...linkButtonStyle, color: '#888', fontSize: '14px' }}\n                    onClick={() => {\n                        const newSeed = randomSeed();\n                        setSeed(newSeed);\n                        // @ts-ignore\n                        onChange && onChange({ target: { value: newSeed } });\n                    }}\n                >\n                    New Seed\n                </button>\n            </div>\n            <input\n                {...inputProps}\n                type=\"text\"\n                value={seed}\n                onChange={(e) => {\n                    setSeed(e.target.value);\n                    onChange && onChange(e);\n                }} />\n        </div>\n    );\n};\n","import React, { FormEventHandler, useState } from \"react\";\nimport Collapsible from \"react-collapsible\";\nimport { PAGE_SECTION_STYLE } from \"../BoardGenerator\";\nimport { typeToColor } from \"../BoardView\";\nimport { BasicInput } from \"./BasicInput\";\nimport CollapseButton, {COLLAPSIBLE_EASING, COLLAPSIBLE_TIME} from \"./CollapseButton\";\nimport { InputCard } from \"./InputCard\";\nimport { RadioInput } from \"./RadioInput\";\nimport { SeedInput } from \"./SeedInput\";\n\nexport type GameMode = 'Standard' | 'Duet';\n\nexport interface CodenamesFormData {\n    boardRows: number;\n    boardColumns: number;\n    cards: number;\n    startCards: number;\n    assassins: number;\n    startColor: 'Blue' | 'Red' | 'Random';\n    seed: string;\n    mode: GameMode;\n    [key: string]: string | number;\n}\n\nexport interface ModeConfig {\n    mode: GameMode;\n    \n}\n  \nexport interface BoardFormProps {\n    formData?: CodenamesFormData;\n    setFormData: (formData: CodenamesFormData) => void\n}\n\nexport const linkButtonStyle = {\n    padding: 'none',\n    background: 'none',\n    border: 'none',\n    cursor: 'pointer',\n    fontFamily: 'Helvetica,Arial,sans-serif',\n    fontSize: '16px',\n    textDecoration: 'underline',\n    color: '#FFF'\n};\n\nconst defaultFormValues: { [mode in GameMode]: CodenamesFormData } = {\n    Standard: {\n        boardRows: 5,\n        boardColumns: 5,\n        cards: 8,\n        startCards: 1,\n        assassins: 1,\n        startColor: 'Random',\n        mode: 'Standard',\n        seed: ''\n    },\n    Duet: {\n        boardRows: 5,\n        boardColumns: 5,\n        cards: 9,\n        startCards: 0,\n        assassins: 3,\n        startColor: 'Random',\n        mode: 'Duet',\n        seed: ''\n    }\n};\n\n\nconst BoardForm: React.FC<BoardFormProps> = ({ formData, setFormData }) => {\n    const startValues = formData\n        ? formData\n        : {\n            ...defaultFormValues.Standard,\n            seed: randomSeed()\n        };\n\n    // for animations\n    const [proxyGameMode, setProxyGameMode] = useState(startValues.mode);\n    const [mode, _setGameMode] = useState(startValues.mode);\n\n    const [rows, setRows] = useState(startValues.boardRows);\n    const [columns, setColumns] = useState(startValues.boardColumns);\n    const [cards, setCards] = useState(startValues.cards);\n    const [startCards, setStartCards] = useState(startValues.startCards);\n    const [assassins, setAssassins] = useState(startValues.assassins);\n    const [startColor, setStartColor] = useState(startValues.startColor);\n    const [seed, setSeed] = useState(startValues.seed);\n\n    const [newSeedOnGenerate, setNewSeedOnGenerate] = useState<boolean>(true);\n    const [closeConfigOnGenerate, setCloseConfigOnGenerate] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n    const [errorKey, setErrorKey] = useState<number>(0);\n\n    const [isCollapsibleOpen, setIsCollapsibleOpen] = useState<boolean>(true);\n    const [resetFormInputs, setResetFormInputs] = useState<boolean>(false);\n\n    const setGameMode = (newMode: GameMode) => {\n        if (mode !== newMode) {\n            const defaults = defaultFormValues[newMode];\n            setRows(defaults.boardRows);\n            setColumns(defaults.boardColumns);\n            setCards(defaults.cards);\n            setStartCards(defaults.startCards);\n            setAssassins(defaults.assassins);\n            setStartColor(defaults.startColor);\n            setResetFormInputs(false);\n        }\n        _setGameMode(newMode);\n    };\n\n    const onFormSubmit: FormEventHandler<HTMLFormElement> = (e) => {\n        e.preventDefault();\n        setErrorKey(prev => prev + 1);\n        const formData: any = {};\n        for (let [k, v] of (new FormData(e.currentTarget)).entries()) {\n            formData[k] = /^\\d+$/.test(v as string) ? parseInt(v as string) : v;\n        }\n\n        if (newSeedOnGenerate) {\n            const newSeed = randomSeed();\n            formData.seed = newSeed;\n            setSeed(newSeed);\n        }\n        const totalCards = formData.boardRows * formData.boardColumns;\n\n        const configuredCards = mode === 'Standard' \n            ? formData.cards * 2 + formData.startCards + formData.assassins\n            : formData.cards + formData.assassins;\n        if (configuredCards > totalCards) {\n            setError(`Too many configured cards (${configuredCards}) for this board (${formData.boardRows}x${formData.boardColumns}=${totalCards})`);\n            return false;\n        } else {\n            if (closeConfigOnGenerate) {\n                setIsCollapsibleOpen(false);\n            }\n            setFormData(formData);\n            setError(null);\n        }\n    };\n\n    return (\n        <Collapsible \n            tabIndex={0}\n            open={isCollapsibleOpen}\n            onTriggerOpening={() => setIsCollapsibleOpen(true)}\n            onTriggerClosing={() => setIsCollapsibleOpen(false)}\n            trigger={<CollapseButton isOpen={isCollapsibleOpen} label=\"Game Config\"/>}\n            containerElementProps={{style: PAGE_SECTION_STYLE}}\n            transitionTime={COLLAPSIBLE_TIME}\n            easing={COLLAPSIBLE_EASING}\n        >\n            <form onSubmit={onFormSubmit}>\n                <div style={{\n                    display: 'flex',\n                    flexWrap: 'wrap'\n                }}>\n                    {/* TODO confirm board reset */}\n                    <InputCard title=\"Game Mode\">\n                        <RadioInput labels={['Standard', 'Duet']} name=\"mode\" value={mode} onChange={(e) => {\n                            if (!window.confirm('This will reset config to default values - are you sure?')) {\n                                return;\n                            }\n                            setProxyGameMode(e.target.value as any);\n                            setResetFormInputs(true);\n                        }} />\n                    </InputCard>\n                </div>\n                <hr style={{ height: '1px', border: 'none', background: '#555', margin: '24px 0' }} />\n                <Collapsible \n                    trigger=\"\" \n                    open={!resetFormInputs} onClose={() => setGameMode(proxyGameMode)}\n                    transitionTime={COLLAPSIBLE_TIME}\n                    easing={COLLAPSIBLE_EASING}\n                >\n                    <div style={{\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        marginBottom: '24px'\n                    }}>\n                        \n                        <InputCard title=\"Board\">\n                            <BasicInput label=\"Rows\" type=\"number\" name=\"boardRows\" value={rows} onChange={(e) => setRows(parseInt(e.target.value))} defaultValue={defaultFormValues[mode].boardRows} />\n                            <BasicInput label=\"Columns\" type=\"number\" name=\"boardColumns\" value={columns} onChange={(e) => setColumns(parseInt(e.target.value))} defaultValue={defaultFormValues[mode].boardColumns} />\n                        </InputCard>\n                        <InputCard title=\"Game\">\n                            <BasicInput label=\"Team Cards\" type=\"number\" name=\"cards\" value={cards} onChange={(e) => setCards(parseInt(e.target.value))} defaultValue={suggestedCards(rows, columns, mode)} />\n                            <BasicInput label=\"Assassins\" type=\"number\" name=\"assassins\" value={assassins} onChange={(e) => setAssassins(parseInt(e.target.value))} defaultValue={suggestedAssassins(rows, columns, mode)} />\n                        </InputCard>\n                        {mode==='Standard' && <InputCard title=\"Standard Mode\">\n                            <BasicInput label=\"Start Handicap\" type=\"number\" name=\"startCards\" value={startCards} onChange={(e) => setStartCards(parseInt(e.target.value))} defaultValue={defaultFormValues[mode].startCards} />\n                            <RadioInput title=\"Starting Team\" labels={['Red', 'Blue', 'Random']} name=\"startColor\" value={startColor} onChange={(e) => setStartColor(e.target.value as any)} defaultValue=\"Random\" />\n                        </InputCard>}\n                        <InputCard title=\"Random\">\n                            <SeedInput name=\"seed\" value={seed} onChange={(e) => setSeed(e.target.value)}/>\n                        </InputCard>\n                        \n                    </div>\n                    <button style={{ \n                        background: typeToColor[mode === 'Standard' ? 'Blue' : 'DuetCorrect'], \n                        marginRight: '12px' \n                    }}>\n                        Generate\n                    </button>\n                    <label style={{ marginRight: '12px', color: '#888', fontSize: '14px' }}>\n                        <input type=\"checkbox\" checked={newSeedOnGenerate} onChange={(e) => setNewSeedOnGenerate(e.target.checked)}/>\n                        with a new random seed\n                    </label>\n                    <label style={{ marginRight: '12px', color: '#888', fontSize: '14px' }}>\n                        <input type=\"checkbox\" checked={closeConfigOnGenerate} onChange={(e) => setCloseConfigOnGenerate(e.target.checked)}/>\n                        Close config?\n                    </label>\n\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            const defaults = defaultFormValues[mode];\n                            setRows(defaults.boardRows);\n                            setColumns(defaults.boardColumns);\n                            setCards(defaults.cards);\n                            setStartCards(defaults.startCards);\n                            setAssassins(defaults.assassins);\n                            setStartColor(defaults.startColor);\n                            setSeed(randomSeed());\n                        }}\n                        style={{ \n                            background: typeToColor[mode === 'Standard' ? 'Red' : 'Bystander'],\n                            marginRight: '12px' \n                        }}>\n                        Reset Defaults\n                    </button>\n                </Collapsible>\n                <div \n                    key={errorKey} \n                    style={{ \n                        color: '#c9461d', \n                        animationName: 'fadeOut', \n                        animationDuration: '6s', \n                        animationFillMode: 'forwards',\n                        marginTop: '16px'\n                    }}>\n                        {error}\n                </div>\n            </form>\n        </Collapsible>\n    );\n};\n\nconst suggestedCards = (rows: number, columns: number, gameMode: GameMode) => {\n    if (!rows || !columns) {\n        return defaultFormValues[gameMode].cards;\n    }\n    if (gameMode === 'Standard') {\n        return Math.floor(rows * columns/3);\n    } else {\n        return Math.floor(rows * columns/3) + 1;\n    }\n};\n\nconst suggestedAssassins = (rows: number, columns: number, gameMode: GameMode) => \n    Math.floor(rows * columns / (gameMode === 'Standard' ? 15 : 8)) || defaultFormValues[gameMode].assassins;\n\nexport const randomSeed = (): string => Math.random().toString(36).slice(2);\n\nexport function useControllableState<T>(value: T, initialValue?: T | undefined): [state: T, setState: (action: React.SetStateAction<T>) => void] {\n    const [stateValue, setState] = useState(initialValue || value);\n    const effectiveValue = value !== undefined ? value : stateValue;\n    return [effectiveValue, setState];\n}\n\nexport default BoardForm;\n","\nimport chunk from 'lodash/chunk';\nimport fill from 'lodash/fill';\nimport seedrandom from 'seedrandom';\nimport { CodenamesFormData, GameMode } from './BoardForm/BoardForm';\nimport { CardType } from './BoardView';\n\nexport type FormDataVersion = 0 | 1 | 2;\n// eslint-disable-next-line\nconst UNKNOWN_VERSION = 0;\nconst WRITE_VERSION = 2;\n\nconst v1FormDataKeys = [\n    'boardRows',\n    'boardColumns',\n    'cards',\n    'startCards',\n    'startColor',\n    'assassins',\n    'seed'\n].sort();\n\nconst v2FormDataKeys = [\n    ...v1FormDataKeys,\n    'mode',\n].sort();\n\nconst formDataKeys = [\n    [],\n    v1FormDataKeys,\n    v2FormDataKeys\n];\n\nexport const encodeFormData = (formData: CodenamesFormData): string => {\n    const orderedValues = formDataKeys[WRITE_VERSION]\n                            .map((k): [k: string, v: string | number] => [k, formData[k]])\n                            .sort(([k1], [k2]) => k1.localeCompare(k2))\n                            .map(([_, v]) => v);\n    return btoa(JSON.stringify([WRITE_VERSION, ...orderedValues]));\n}\n\nexport const decodeFormData = (slug: string): CodenamesFormData | undefined => {\n    let orderedValues: any[] = [];\n    let version: FormDataVersion = 0;\n    try {\n        [version, ...orderedValues] = JSON.parse(atob(slug));\n    } catch {\n        return undefined;\n    }\n\n    switch(version) {\n        case 1:\n            return v1DecodeFormData(orderedValues);\n        case 2:\n            return v2DecodeFormData(orderedValues);\n        default:\n            return undefined;\n    }\n};\n\nconst v1DecodeFormData = (orderedValues: any[]): CodenamesFormData | undefined => {\n    const maybeFormData = decodeWithKeys(orderedValues, v1FormDataKeys);\n    if (maybeFormData) {\n        maybeFormData.mode = 'Standard';\n    }\n\n    return validate(maybeFormData);\n}\n\nconst v2DecodeFormData = (orderedValues: any[]): CodenamesFormData | undefined => \n    validate(decodeWithKeys(orderedValues, v2FormDataKeys));\n\nconst decodeWithKeys = (orderedValues: any[], orderedKeys: string[]): CodenamesFormData | undefined => {\n    if (orderedValues && orderedValues.length <= orderedKeys.length) {\n        const ret: any = {};\n        orderedKeys.forEach((key, i) => ret[key] = orderedValues[i]);\n        return ret;\n    }\n\n    return undefined;\n};\n\nconst validate = (maybeFormData: any): CodenamesFormData | undefined => {\n    if (isValidFormData(maybeFormData)) {\n        return maybeFormData;\n    }\n    return undefined;\n};\n\nconst isValidFormData = (maybeFormData: any): boolean => (\n    maybeFormData && \n    maybeFormData.boardRows && \n    maybeFormData.boardColumns && \n    maybeFormData.cards && \n    !isNaN(maybeFormData.startCards) && \n    !isNaN(maybeFormData.assassins) && \n    maybeFormData.seed &&\n    maybeFormData.mode\n);\n\nexport const getStartColor = (\n    startColor: 'Random' | 'Blue' | 'Red', \n    seed: string\n): 'Blue' | 'Red' => {\n    if (startColor === 'Random') {\n        return seededRandomInt(seed + 'start')(0, 1) ? 'Blue' : 'Red';\n    } else {\n        return startColor;\n    }\n}\n\nexport interface BoardLayout<C> {\n    mode: GameMode;\n    cards: C[][]\n    startColor: CardType;\n    info?: string[];\n}\n\nexport const createLayout = (formData: CodenamesFormData): BoardLayout<CardType | CardType[]> => (\n    formData.mode === 'Standard'\n        ? createStandardLayout(formData)\n        : createDuetLayout(formData)\n);\n\nconst createStandardLayout = ({\n    boardRows,\n    boardColumns,\n    cards,\n    startCards,\n    startColor,\n    assassins,\n    seed\n}: CodenamesFormData): BoardLayout<CardType> =>  {\n    const rand = seededRandomInt(seed);\n\n    const actualStartColor = getStartColor(startColor, seed);\n    const blueCards = cards + (actualStartColor === 'Blue' ? startCards : 0);\n    const redCards = cards + (actualStartColor === 'Red' ? startCards : 0);\n\n    const flatLayout: CardType[] = fill(Array(boardRows * boardColumns), 'Bystander');\n    let step = 0;\n    step = _fill(flatLayout, 'Blue', step, step + blueCards)\n    step = _fill(flatLayout, 'Red', step, step + redCards);\n    _fill(flatLayout, 'Assassin', step, step + assassins);\n\n    shuffle(flatLayout, rand);\n\n    return {mode: 'Standard', cards: chunk(flatLayout, boardColumns), startColor: getStartColor(startColor, seed)};\n};\n\nconst createDuetLayout = ({\n    boardRows,\n    boardColumns,\n    cards,\n    assassins,\n    seed,\n}: CodenamesFormData): BoardLayout<CardType[]> =>  {\n    const rand = seededRandomInt(seed);\n\n    // 1/3 of team cards should overlap\n    const bothCorrect = Math.floor(cards/3);\n    // try to use 1/3 of assassins, but don't exceed remaining correct\n    const correctAssassins = Math.min(cards - bothCorrect, Math.floor(assassins/3)); \n    // correct/bystander is remainder\n    const correctBystanders = cards - (bothCorrect + correctAssassins);\n\n    const remainderAfterCorrect = (boardRows * boardColumns) - (bothCorrect + 2*correctAssassins + 2*correctBystanders);\n\n    // try to split assassins between doubled and bystander, but use doubled if not enough bystanders left\n    const remainingAssassins = assassins - correctAssassins;\n    const bystanderAssassins = Math.min(Math.floor(remainingAssassins/2), remainderAfterCorrect - remainingAssassins);\n    const bothAssassins = remainingAssassins - bystanderAssassins;\n\n    const flatLayout: CardType[][] = fill(Array(boardRows * boardColumns), ['Bystander', 'Bystander']);\n    let step = 0;\n    step = _fill(flatLayout, ['DuetCorrect', 'DuetCorrect'], step, step + bothCorrect);\n    step = _fill(flatLayout, ['DuetCorrect', 'Assassin'], step, step + correctAssassins);\n    step = _fill(flatLayout, ['Assassin', 'DuetCorrect'], step, step + correctAssassins);\n    step = _fill(flatLayout, ['DuetCorrect', 'Bystander'], step, step + correctBystanders);\n    step = _fill(flatLayout, ['Bystander', 'DuetCorrect'], step, step + correctBystanders);\n    step = _fill(flatLayout, ['Assassin', 'Assassin'], step, step + bothAssassins);\n    step = _fill(flatLayout, ['Bystander', 'Assassin'], step, step + bystanderAssassins);\n    step = _fill(flatLayout, ['Assassin', 'Bystander'], step, step + bystanderAssassins);\n\n    shuffle(flatLayout, rand);\n    return {\n        mode: 'Duet',\n        cards: chunk(flatLayout, boardColumns), \n        startColor: 'DuetCorrect',\n        info: [\n            `Correct / Correct: ${bothCorrect} total`,\n            `Correct / Assassin: ${correctAssassins} per team`,\n            `Correct / Bystander: ${correctBystanders} per team`,\n            `Assassin / Assassin: ${bothAssassins} total`,\n            `Assassin / Bystander: ${bystanderAssassins} per team`,\n            `Bystander / Bystander: ${boardRows * boardColumns - step} total`,\n        ]\n    }\n};\n\n// fill and return end pos\nfunction _fill<T>(arr: T[], value: T, start: number, end: number): number {\n    fill(arr, value, start, end)\n    return end;\n}\n\nfunction shuffle<T>(arr: T[], rand: (min: number, max: number) => number): void {\n    for (var i = arr.length - 1; i > 0; i--) {\n        const j = rand(0, i);\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n}\n\nexport const seededRandomInt = (seed: string): (min: number, max: number) => number => {\n    const rand = seedrandom(seed);\n    return (min: number, max: number): number => Math.floor(rand() * (max - min + 1) + min);\n};\n","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCopy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 442 442\",\n    style: {\n      enableBackground: \"new 0 0 442 442\"\n    },\n    xmlSpace: \"preserve\",\n    fill: \"#EEE\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"291,0 51,0 51,332 121,332 121,80 291,80  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"306,125 306,195 376,195  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"276,225 276,110 151,110 151,442 391,442 391,225  \"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.f212b952.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgShare(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 458.624 458.624\",\n    style: {\n      enableBackground: \"new 0 0 458.624 458.624\"\n    },\n    xmlSpace: \"preserve\",\n    fill: \"#EEE\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M339.588,314.529c-14.215,0-27.456,4.133-38.621,11.239l-112.682-78.67c1.809-6.315,2.798-12.976,2.798-19.871 c0-6.896-0.989-13.557-2.798-19.871l109.64-76.547c11.764,8.356,26.133,13.286,41.662,13.286c39.79,0,72.047-32.257,72.047-72.047 C411.634,32.258,379.378,0,339.588,0c-39.79,0-72.047,32.257-72.047,72.047c0,5.255,0.578,10.373,1.646,15.308l-112.424,78.491 c-10.974-6.759-23.892-10.666-37.727-10.666c-39.79,0-72.047,32.257-72.047,72.047s32.256,72.047,72.047,72.047 c13.834,0,26.753-3.907,37.727-10.666l113.292,79.097c-1.629,6.017-2.514,12.34-2.514,18.872c0,39.79,32.257,72.047,72.047,72.047 c39.79,0,72.047-32.257,72.047-72.047C411.635,346.787,379.378,314.529,339.588,314.529z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgShare);\nexport default __webpack_public_path__ + \"static/media/share.6eed6cfd.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from \"react\";\nimport { ReactComponent as CopyIcon } from './img/copy.svg';\nimport { ReactComponent as ShareIcon } from './img/share.svg';\n\nexport interface LinkSharerProps {\n\n}\n\nconst iconStyle = {\n    width: '18px',\n    height: '18px',\n    marginLeft: '12px',\n    cursor: 'pointer',\n    paddingTop: '8px'\n}\n\nconst LinkSharer: React.FC<LinkSharerProps> = () => {\n    const [copied, setCopied] = useState<number>(0);\n    return (\n            <div style={{\n                marginBottom: '48px',\n                display: 'flex', \n                alignItems: 'center', \n                justifyContent: 'center',\n                minWidth: '634px'\n            }}>\n                <input disabled value={window.location.href} style={{\n                    minWidth: '546px'\n                }}/>\n                <div style={{position: 'relative'}}>\n                    <CopyIcon \n                        style={iconStyle} \n                        onClick={() => {\n                            navigator.clipboard.writeText(window.location.href);\n                            setCopied(prev => prev + 1);\n                        }}\n                    />\n                    {(copied || null) && <div key={copied} style={{ \n                        position: 'absolute', \n                        left: '12px', \n                        bottom: '-24px', \n                        fontSize: '12px',\n                        whiteSpace: 'nowrap',\n                        animationName: 'fadeOut',\n                        animationDuration: '2s',\n                        animationFillMode: 'forwards',\n                        textAlign: 'right'\n                    }}>\n                        Copied to clipboard\n                    </div>}\n                </div>\n                {navigator['share'] && <ShareIcon style={iconStyle} onClick={() => {\n                    navigator.share({\n                        title: 'Codenames Board Link',\n                        text: 'Codenames Board Link',\n                        url: window.location.href,\n                    });\n                }}/>}\n            </div>\n\n    );\n};\n\nexport default LinkSharer;","import { CSSProperties, useState } from 'react';\nimport BoardView from './BoardView';\nimport BoardForm, { CodenamesFormData } from './BoardForm/BoardForm';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router-dom';\nimport { createLayout, decodeFormData, encodeFormData } from './BoardEncoding';\nimport LinkSharer from './LinkSharer';\n\nexport const PAGE_SECTION_STYLE: CSSProperties = {\n    marginBottom: '48px',\n    border: '1px solid #555',\n    borderRadius: '16px',\n    padding: '24px',\n    boxShadow: '8px 8px 12px #2b2b2b',\n    minWidth: '586px',\n    flexGrow: 1,\n};\n\nconst BoardGenerator = () => {\n    const params = useParams();\n    const slug: string | undefined = params.slug;\n    let initialFormData = undefined;\n    if (slug) {\n        initialFormData = decodeFormData(slug);\n    }\n    const [formData, setFormData] = useState<CodenamesFormData | undefined>(initialFormData);\n    const navigate = useNavigate();\n\n    const setFormDataAndHash = (newFormData: CodenamesFormData) => {\n        setFormData(newFormData);\n        navigate(`/${encodeFormData(newFormData)}`)\n    }\n    \n    return (\n        <div style={{ height: '100%', margin: '48px' }}>\n            <h1>Codenames Board Generator</h1>\n            <a \n                href=\"https://github.com/tristanjohnson849/codenames-scaler\"\n                style={{ \n                    position: 'absolute',\n                    margin: '60px',\n                    top: '0px', \n                    right: '0px', \n                    color: '#777', \n                    fontSize: '18px',\n                    textDecoration: 'none'\n                }}\n                target=\"blank\"\n            >\n                Source\n            </a>\n            <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'stretch',\n                maxWidth: '1000px',\n                margin: 'auto'\n            }}>\n                <BoardForm formData={formData} setFormData={(formData) => setFormDataAndHash(formData)}/>\n                {formData && <LinkSharer />}\n                {formData && <BoardView key={encodeFormData(formData)} layout={createLayout(formData)}/>}\n            </div>\n        </div>\n    );\n}\n\nexport default BoardGenerator;\n","import React from 'react';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport BoardGenerator from './BoardGenerator';\n\nconst App = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"\" element={<BoardGenerator/>}/>\n      <Route path=\":slug\" element={<BoardGenerator/>}/>\n    </Routes>\n  </HashRouter>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}