{"version":3,"sources":["img/rotate-image.svg","BoardForm/CollapseButton.tsx","BoardView/SingleBoardView.tsx","BoardView/BoardSection.tsx","BoardView/DuetBreakdown.tsx","BoardView/index.tsx","BoardForm/BasicInput.tsx","BoardForm/InputCard.tsx","BoardForm/RadioInput.tsx","BoardForm/SeedInput.tsx","BoardForm/BoardForm.tsx","BoardEncoding.ts","BoardLayout.ts","img/copy.svg","img/share.svg","LinkSharer.tsx","BoardGenerator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["_g","_g2","_g3","_g4","_g5","_g6","_g7","_g8","_g9","_g10","_g11","_g12","_g13","_g14","_g15","_g16","COLLAPSIBLE_EASING","COLLAPSIBLE_TIME","CollapseButton","isOpen","label","closeLabelOnOpen","style","position","fontSize","cursor","marginLeft","marginBottom","undefined","trigger","open","transitionTime","easing","padding","top","right","display","transition","transform","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRotateImage","_ref","svgRef","title","titleId","props","id","xmlns","xmlnsXlink","x","y","width","height","viewBox","enableBackground","xmlSpace","fill","ref","d","ForwardRef","RotateButton","rotate","counterClockwise","onClick","HLight","isTop","resetRotation","color","lightColor","typeToColor","bottom","left","margin","borderRadius","background","zIndex","VLight","isLeft","SingleBoardView","layout","cards","startColor","useState","boardRotation","setBoardRotation","prevRotation","maxWidth","minWidth","aspectRatio","border","boxShadow","transitionTimingFunction","flex","flexDirection","map","row","colIndex","cellType","rowIndex","BoardSection","teamName","defaultOpen","isBoardOpen","setIsBoardOpen","tabIndex","handleTriggerClick","window","confirm","containerElementProps","PAGE_SECTION_STYLE","SORT_ORDER","customSortBy","arr","customOrdering","fallback","index","fromEntries","o","sort","t1","t2","MiniCard","cardType","flexGrow","DuetBreakdown","sortedCards","t","customSort","flatMap","team1Card","team2Card","justifyContent","Blue","Red","Bystander","Assassin","DuetCorrect","DuetBoardView","getDisplayableDuetLayout","info","item","teamNumber","cell","BoardView","mode","BasicInput","value","defaultValue","inputProps","useControllableState","inputValue","setInputValue","type","linkButtonStyle","onChange","e","InputCard","children","paddingLeft","paddingBottom","RadioInput","labels","checkedLabel","setCheckedLabel","marginRight","checked","SeedInput","randomSeed","seed","setSeed","newSeed","fontFamily","textDecoration","defaultFormValues","Standard","boardRows","boardColumns","startCards","assassins","Duet","suggestedCards","rows","columns","gameMode","Math","floor","suggestedAssassins","random","toString","slice","initialValue","stateValue","BoardForm","formData","setFormData","startValues","proxyGameMode","setProxyGameMode","_setGameMode","setRows","setColumns","setCards","setStartCards","setAssassins","setStartColor","newSeedOnGenerate","setNewSeedOnGenerate","closeConfigOnGenerate","setCloseConfigOnGenerate","error","setError","errorKey","setErrorKey","isCollapsibleOpen","setIsCollapsibleOpen","resetFormInputs","setResetFormInputs","onTriggerOpening","onTriggerClosing","onSubmit","preventDefault","prev","FormData","currentTarget","entries","k","v","test","parseInt","totalCards","configuredCards","flexWrap","name","onClose","newMode","defaults","setGameMode","animationName","animationDuration","animationFillMode","marginTop","WRITE_VERSION","v1FormDataKeys","v2FormDataKeys","formDataKeys","v1DecodeFormData","orderedValues","maybeFormData","decodeWithKeys","validate","v2DecodeFormData","orderedKeys","ret","forEach","isValidFormData","isNaN","createLayout","createStandardLayout","createDuetLayout","rand","seededRandomInt","actualStartColor","getStartColor","blueCards","redCards","flatLayout","Array","step","_fill","shuffle","chunk","correctBystanders","correctAssassins","boardSize","bystanders","goalBothCorrect","goalCorrectAssassin","goalCorrectBystander","bothCorrect","max","min","remainingAssassins","remainingBystanders","bystanderAssassins","bothAssassins","bothBystander","start","end","j","seedrandom","SvgCopy","points","SvgShare","iconStyle","paddingTop","LinkSharer","copied","setCopied","alignItems","disabled","location","href","navigator","clipboard","writeText","whiteSpace","textAlign","share","text","url","BoardGenerator","slug","useParams","initialFormData","version","JSON","parse","atob","decodeFormData","navigate","useNavigate","setFormDataAndHash","newFormData","k1","k2","localeCompare","btoa","stringify","encodeFormData","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e87c3022.chunk.js","sourcesContent":["var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRotateImage(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"509.823px\",\n    height: \"509.822px\",\n    viewBox: \"0 0 509.823 509.822\",\n    style: {\n      enableBackground: \"new 0 0 509.823 509.822\"\n    },\n    xmlSpace: \"preserve\",\n    fill: \"#EEE\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M509.823,254.911c0,140.559-114.354,254.911-254.911,254.911C114.353,509.822,0,395.47,0,254.911h44.97 c0,115.758,94.182,209.949,209.942,209.949c115.757,0,209.938-94.191,209.938-209.949c0-115.76-94.182-209.941-209.938-209.941 c-50.893,0-99.505,18.291-137.719,51.558l45.908,45.903L20.507,165.208L43.283,22.633l42.057,42.05 C132.097,22.972,192.071,0,254.912,0C395.469,0,509.823,114.353,509.823,254.911z M409.653,251.164L255.002,96.513L100.347,251.164 l154.655,154.652L409.653,251.164z\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRotateImage);\nexport default __webpack_public_path__ + \"static/media/rotate-image.0b60d7c6.svg\";\nexport { ForwardRef as ReactComponent };","import Collapsible from \"react-collapsible\";\n\ninterface CollapseButtonProps {\n    isOpen: boolean;\n    label?: string;\n    closeLabelOnOpen?: boolean\n}\n\nexport const COLLAPSIBLE_EASING = \"cubic-bezier(.5,.9,.2,1.0)\";\nexport const COLLAPSIBLE_TIME = 400;\n\nconst CollapseButton = ({isOpen, label, closeLabelOnOpen = true}: CollapseButtonProps) => {\n    return (\n        <div style={{ \n            position: 'relative',\n            fontSize: '24px',\n            cursor: 'pointer',\n            marginLeft: '16px',\n            marginBottom: isOpen && !closeLabelOnOpen ? '16px' : undefined\n        }}>\n            {closeLabelOnOpen \n                ? <Collapsible\n                    trigger=\"\"\n                    open={!isOpen}\n                    transitionTime={COLLAPSIBLE_TIME}\n                    easing={COLLAPSIBLE_EASING}\n                >{label}</Collapsible>\n                : label\n            }\n            <div\n                style={{\n                    position: 'absolute',\n                    padding: '8px',\n                    top: '-12px',\n                    right: '2px',\n                    display: 'block',\n                    transition: 'transform 300ms',\n                    transform: isOpen ? 'rotateZ(180deg)' : ''\n                }}\n            >⋁</div>\n        </div>\n    );\n}\n\nexport default CollapseButton;","import React, { CSSProperties, useState } from \"react\";\nimport { COLLAPSIBLE_EASING, COLLAPSIBLE_TIME } from \"../BoardForm/CollapseButton\";\nimport { typeToColor } from \"./index\";\nimport { ReactComponent as RotateCounterClockwiseIcon } from '../img/rotate-image.svg';\nimport { CardType, DisplayableLayout } from \"../BoardLayout\";\n\n\nconst SingleBoardView: React.FC<{ layout: DisplayableLayout }> = ({ layout: { cards, startColor }}) => {\n    const [boardRotation, setBoardRotation] = useState<number>(0);\n\n    const rotate = (counterClockwise: boolean) => setBoardRotation(prevRotation => counterClockwise\n        ? prevRotation - 90\n        : prevRotation + 90\n    );\n    // subtract rotation % 360 for correcct animations, if used 0 would spin through all rotations\n    const resetRotation = () => setBoardRotation(prevRotation => prevRotation - (prevRotation % 360));\n    return (\n        <div style={{\n            position: 'relative',\n            padding: '0 48px'\n        }}>\n            <div style={{\n                position: 'relative',\n                display: 'flex',\n                maxWidth: '720px',\n                minWidth: '424px',\n                aspectRatio: '1 / 1',\n                margin: '18px auto',\n                padding: '32px',\n                background: '#434343',\n                borderRadius: '12px',\n                border: '1px solid #777',\n                boxShadow: '8px 8px 12px #2b2b2b',\n                transform: `rotate(${boardRotation}deg)`,\n                transition: `transform ${COLLAPSIBLE_TIME}ms`,\n                transitionTimingFunction: COLLAPSIBLE_EASING\n            }}>\n                <HLight isTop={true} color={startColor} resetRotation={resetRotation} />\n                <HLight isTop={false} color={startColor} />\n                <VLight isLeft={true} color={startColor} />\n                <VLight isLeft={false} color={startColor} />\n                <div style={{\n                    minWidth: '360px',\n                    flex: 1,\n                    aspectRatio: '1 / 1',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    borderRadius: '12px',\n                    background: '#2b2b2b',\n                    border: '1px solid #777',\n                    padding: '8px'\n                }}>\n                    {cards.map((row, colIndex) => <div key={colIndex} style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        flex: 1\n                    }}>\n                        {row.map((cellType, rowIndex) => <div key={`${colIndex}-${rowIndex}`} style={{\n                            flex: 1,\n                            background: typeToColor[cellType],\n                            margin: '4px',\n                            borderRadius: '12px',\n                            boxShadow: '6px 6px 8px #1c1c1c',\n                            border: '1px solid #555'\n                        }} />\n                        )}\n                    </div>\n                    )}\n                </div>\n            </div>\n            <RotateButton rotate={rotate} counterClockwise={true} style={{ position: 'absolute', bottom: '8px', left: '8px' }} />\n            <RotateButton rotate={rotate} counterClockwise={false} style={{ position: 'absolute', bottom: '8px', right: '8px' }} />\n        </div>\n    );\n};\n\ninterface RotateButtonProps {\n    rotate: (counterClockwise: boolean) => void;\n    counterClockwise?: boolean;\n    style?: CSSProperties;\n}\n\nexport const RotateButton: React.FC<RotateButtonProps> = ({ \n    rotate,\n    counterClockwise = true, \n    style={}\n}) => {\n    return (\n        <RotateCounterClockwiseIcon \n            onClick={() => rotate(counterClockwise)}\n            style={{\n                width: '24px',\n                height: '24px',\n                transform: counterClockwise ? '': 'scaleX(-1)',\n                cursor: 'pointer',\n                ...style\n            }} \n        />\n    );\n}\n\nexport const HLight: React.FC<{ isTop: boolean, color?: CardType, resetRotation?: () => void }> = ({ isTop, resetRotation = null, color = 'Bystander' }) => {\n    const lightColor = typeToColor[color];\n    return (<>\n        <div style={{\n            position: 'absolute',\n            top: isTop ? 0 : undefined,\n            bottom: isTop ? undefined : 0,\n            left: '40%',\n            height: '32px',\n            width: '20%',\n            margin: 'auto',\n            transform: `perspective(10px) rotateX(${isTop ? '-' : ''}1deg)`,\n            borderRadius: isTop ? '4px 4px 8px 8px' : '8px 8px 4px 4px',\n            background: `linear-gradient(to right, ${lightColor} 5%, #FFF 45%, #FFF 55%, ${lightColor} 95%)`,\n            zIndex: 2\n        }}/>\n        {resetRotation && (\n            <div \n                style={{\n                    position: 'absolute',\n                    top: isTop ? 0 : undefined,\n                    bottom: isTop ? undefined : 0,\n                    left: '35%',\n                    height: '32px',\n                    width: '30%',\n                    margin: 'auto',\n                    zIndex: 1,\n                    cursor: 'pointer'\n                }} \n                onClick={resetRotation}\n            >\n                <div style={{\n                    width: '100%',\n                    transform: `perspective(10px) rotateX(${isTop ? '-' : ''}1deg)`,\n                    borderRadius: isTop ? '4px 4px 8px 8px' : '8px 8px 4px 4px',\n                    background: `#363636`,\n                    height: '32px',\n                }}/>\n                <div style={{ position: 'absolute', transform: 'rotateZ(180deg)', left: '8px', top: '4px'}}>⋁</div>\n                <div style={{ position: 'absolute', transform: 'rotateZ(180deg)', right: '8px', top: '4px'}}>⋁</div>\n            </div>\n        )}\n    </>);\n};\n\nexport const VLight: React.FC<{ isLeft: boolean, color?: CardType }> = ({ isLeft, color = 'Bystander' }) => {\n    const lightColor = typeToColor[color];\n    return <div style={{\n        position: 'absolute',\n        left: isLeft ? 0 : undefined,\n        right: isLeft ? undefined : 0,\n        top: '40%',\n        height: '20%',\n        width: '32px',\n        margin: 'auto',\n        transform: `perspective(10px) rotateY(${isLeft ? '' : '-'}1deg)`,\n        borderRadius: isLeft ? '4px 8px 8px 4px' : '8px 4px 4px 8px',\n        background: `linear-gradient(to bottom, ${lightColor} 5%, #FFF 45%, #FFF 55%, ${lightColor} 95%)`,\n    }} />\n};\n\nexport default SingleBoardView;","import React, { useState } from \"react\";\nimport Collapsible from \"react-collapsible\";\nimport CollapseButton from \"../BoardForm/CollapseButton\";\nimport { PAGE_SECTION_STYLE } from \"../BoardGenerator\";\nimport SingleBoardView from \"./SingleBoardView\";\nimport { DisplayableLayout } from \"../BoardLayout\";\n\ninterface BoardSectionProps {\n    layout: DisplayableLayout\n    teamName: string;\n    defaultOpen?: boolean;\n}\nconst BoardSection: React.FC<BoardSectionProps> = ({ teamName, layout, defaultOpen = false }) => {\n    const [isBoardOpen, setIsBoardOpen] = useState<boolean>(defaultOpen);\n    return <Collapsible\n        tabIndex={0}\n        trigger={<CollapseButton label={teamName} isOpen={isBoardOpen} closeLabelOnOpen={false} />}\n        open={isBoardOpen}\n        handleTriggerClick={() => {\n            if (!isBoardOpen && window.confirm(`For ${teamName}'s eyes only - are you sure?`)) {\n                setIsBoardOpen(true);\n            }\n            if (isBoardOpen) {\n                setIsBoardOpen(false);\n            }\n        } }\n        containerElementProps={{\n            style: PAGE_SECTION_STYLE\n        }}\n    >\n        <SingleBoardView layout={layout} />\n    </Collapsible>;\n};\n\nexport default BoardSection;","import React from \"react\";\nimport { typeToColor } from '.';\nimport { PAGE_SECTION_STYLE } from \"../BoardGenerator\";\nimport { CardType } from '../BoardLayout';\nimport { DuetLayout } from '../BoardLayout';\n\nconst SORT_ORDER: CardType[][] = [\n    ['DuetCorrect', 'DuetCorrect'],\n    ['DuetCorrect', 'Assassin'],\n    ['Assassin', 'DuetCorrect'],\n    ['DuetCorrect', 'Bystander'],\n    ['Bystander', 'DuetCorrect'],\n    ['Assassin', 'Assassin'],\n    ['Assassin', 'Bystander'],\n    ['Bystander', 'Assassin'],\n    ['Bystander', 'Bystander'],\n];\n\nfunction customSortBy<T, O>(\n    arr: T[],\n    customOrdering: O[],\n    transform: (t: T) => O,\n    fallback: (t1: T, t2: T) => number = () => 0\n): T[] {\n    const index = Object.fromEntries(customOrdering.map((o, i) => [o, i]));\n    return arr.sort((t1: T, t2: T) => (index[t1] - index[t2]) || fallback(t1, t2));\n}\n\nfunction customSort<T>(\n    arr: T[],\n    customOrdering: T[],\n    fallback: (t1: T, t2: T) => number = () => 0\n): T[] {\n    return customSortBy(arr, customOrdering, (t) => t, fallback);\n}\n\nconst DuetBreakdown = ({ layout }: { layout: DuetLayout }) => {\n\n    const sortedCards = customSort(layout.cards.flatMap((row) => row), SORT_ORDER);\n\n    return (\n        <div style={{\n            ...PAGE_SECTION_STYLE,\n            display: 'flex',\n            padding: '8px',\n            marginBottom: '0',\n            height: '60px',\n        }}>\n            {sortedCards.map(([team1Card, team2Card]) => (\n                <div style={{\n                    display: 'flex',\n                    flexGrow: 1,\n                    flexDirection: 'column',\n                    justifyContent: 'center',\n                }}>\n                    <MiniCard cardType={team1Card} />\n                    <hr style={{ height: '12px'}}/>\n                    <MiniCard cardType={team2Card} />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nconst MiniCard = ({ cardType }: { cardType: CardType }) => (\n    <div\n        style={{\n            background: typeToColor[cardType],\n            borderRadius: '2px',\n            margin: '0 4px',\n            flexGrow: 1\n        }}\n    />\n);\n\n\nexport default DuetBreakdown;","import React from \"react\";\nimport { AnyBoardLayout, CardType, DisplayableLayout, DuetLayout, StandardLayout } from \"../BoardLayout\";\nimport { PAGE_SECTION_STYLE } from \"../BoardGenerator\";\nimport BoardSection from \"./BoardSection\";\nimport DuetBreakdown from \"./DuetBreakdown\";\n\n\nexport interface BoardProps {\n    layout: AnyBoardLayout;\n};\n\nexport const typeToColor: { [K in CardType]: string } = {\n    Blue: '#268bad',\n    Red: '#c9461d',\n    Bystander: '#af926e',\n    Assassin: '#1b1b1b',\n    DuetCorrect: '#4CBB17'\n}\n\nconst BoardView: React.FC<BoardProps> = ({layout}) => (\n    layout.mode === 'Standard'\n        ? <BoardSection defaultOpen={true} teamName=\"Codemasters\" layout={layout as StandardLayout}/>\n        : <DuetBoardView layout={layout as DuetLayout}/>\n);\n\nconst DuetBoardView: React.FC<{layout: DuetLayout}> = ({layout}) => {\n    return (\n        <>\n            <BoardSection teamName=\"Team 1\" layout={getDisplayableDuetLayout(layout, 0)}/>\n            <BoardSection teamName=\"Team 2\" layout={getDisplayableDuetLayout(layout, 1)}/>\n            {layout.info && <div style={PAGE_SECTION_STYLE}>\n                <h3>Board Info</h3>\n                <ul>\n                    {layout.info.map(item => <li style={{ margin: '8px 0'}}>{item}</li>)}\n                </ul>\n                <DuetBreakdown layout={layout}/>\n            </div>}\n        </>\n    );\n};\n\nconst getDisplayableDuetLayout = (layout: DuetLayout, teamNumber: number): DisplayableLayout => ({\n    ...layout,\n    cards: layout.cards.map(row => row.map(cell => cell[teamNumber])),\n    startColor: 'DuetCorrect'\n});\n\nexport default BoardView;\n","import React from \"react\";\nimport { useControllableState, linkButtonStyle } from \"./BoardForm\";\n\nexport const BasicInput: React.FC<{ label: string; } & React.ComponentProps<\"input\">> = ({ label, value, defaultValue, ...inputProps }) => {\n    const [inputValue, setInputValue] = useControllableState(value, defaultValue || '');\n\n    return (\n        <label style={{ display: 'flex', flexDirection: 'column', margin: '8px' }}>\n            <span>{label} {defaultValue !== undefined && (\n                <button\n                    type=\"button\"\n                    style={{ ...linkButtonStyle, color: '#888', fontSize: '14px' }}\n                    onClick={() => {\n                        setInputValue(defaultValue);\n                        // @ts-ignore\n                        inputProps.onChange && inputProps.onChange({ target: { value: defaultValue } });\n                    }}\n                >\n                    Suggested: {defaultValue}\n                </button>\n            )}</span>\n            <input\n                {...inputProps}\n                value={inputValue}\n                onChange={(e) => {\n                    setInputValue(e.target.value);\n                    inputProps.onChange && inputProps.onChange(e);\n                }} />\n        </label>\n    );\n};\n","import React, { CSSProperties } from \"react\";\n\n\nexport interface InputCardProps {\n    title: string;\n    style?: CSSProperties;\n}\n\nexport const InputCard: React.FC<InputCardProps> = ({ title, style = {}, children }) => {\n    return (\n        <div style={{ marginLeft: '24px', marginBottom: '24px', maxWidth: '33%', minWidth: '180px', ...style }}>\n            <div style={{ paddingLeft: '16px', paddingBottom: '8px' }}><b>{title}</b></div>\n            <div style={{\n                border: '1px solid #555',\n                padding: '16px',\n                borderRadius: '16px',\n                boxShadow: '6px 6px 8px #2b2b2b',\n            }}>\n                {children}\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useControllableState, linkButtonStyle } from \"./BoardForm\";\n\nexport const RadioInput: React.FC<{ title?: string; labels: string[]; } & React.ComponentProps<\"input\">> = ({ title, labels, value, defaultValue, onChange, ...inputProps }) => {\n    const [checkedLabel, setCheckedLabel] = useControllableState(value, defaultValue || labels[0]);\n\n    return (\n        <div>\n            {(title || defaultValue !== undefined) && <>\n                <div>\n                    {title}\n                    {defaultValue !== undefined && (\n                        <button\n                            type=\"button\"\n                            style={{ ...linkButtonStyle, color: '#888', fontSize: '14px' }}\n                            onClick={() => {\n                                // @ts-ignore\n                                onChange && onChange({ target: { value: defaultValue } });\n                                setCheckedLabel(defaultValue);\n                            }}\n                        >\n                            Suggested: {defaultValue}\n                        </button>\n                    )}\n                </div>\n                <hr />\n            </>}\n            {labels.map((label) => (\n                <label style={{ marginRight: '6px' }}>{label}\n                    <input\n                        type=\"radio\"\n                        value={label}\n                        checked={label === checkedLabel}\n                        onChange={(e) => {\n                            setCheckedLabel(label);\n                            onChange && onChange(e);\n                        }}\n                        {...inputProps} />\n                </label>\n            ))}\n        </div>\n    );\n};\n","import React from \"react\";\nimport { useControllableState, randomSeed, linkButtonStyle } from \"./BoardForm\";\n\nexport const SeedInput: React.FC<React.ComponentProps<\"input\">> = ({ key, value, onChange, ...inputProps }) => {\n    const [seed, setSeed] = useControllableState(value, randomSeed());\n\n    return (\n        <div>\n            <div>\n                Seed\n                <button\n                    type=\"button\"\n                    style={{ ...linkButtonStyle, color: '#888', fontSize: '14px' }}\n                    onClick={() => {\n                        const newSeed = randomSeed();\n                        setSeed(newSeed);\n                        // @ts-ignore\n                        onChange && onChange({ target: { value: newSeed } });\n                    }}\n                >\n                    New Seed\n                </button>\n            </div>\n            <input\n                {...inputProps}\n                type=\"text\"\n                value={seed}\n                onChange={(e) => {\n                    setSeed(e.target.value);\n                    onChange && onChange(e);\n                }} />\n        </div>\n    );\n};\n","import React, { FormEventHandler, useState } from \"react\";\nimport Collapsible from \"react-collapsible\";\nimport { PAGE_SECTION_STYLE } from \"../BoardGenerator\";\nimport { typeToColor } from \"../BoardView\";\nimport { BasicInput } from \"./BasicInput\";\nimport CollapseButton, {COLLAPSIBLE_EASING, COLLAPSIBLE_TIME} from \"./CollapseButton\";\nimport { InputCard } from \"./InputCard\";\nimport { RadioInput } from \"./RadioInput\";\nimport { SeedInput } from \"./SeedInput\";\n\nexport type GameMode = 'Standard' | 'Duet';\n\nexport interface CodenamesFormData {\n    boardRows: number;\n    boardColumns: number;\n    cards: number;\n    startCards: number;\n    assassins: number;\n    startColor: 'Blue' | 'Red' | 'Random';\n    seed: string;\n    mode: GameMode;\n    [key: string]: string | number;\n}\n\nexport interface ModeConfig {\n    mode: GameMode;\n    \n}\n  \nexport interface BoardFormProps {\n    formData?: CodenamesFormData;\n    setFormData: (formData: CodenamesFormData) => void\n}\n\nexport const linkButtonStyle = {\n    padding: 'none',\n    background: 'none',\n    border: 'none',\n    cursor: 'pointer',\n    fontFamily: 'Helvetica,Arial,sans-serif',\n    fontSize: '16px',\n    textDecoration: 'underline',\n    color: '#FFF'\n};\n\nconst defaultFormValues: { [mode in GameMode]: CodenamesFormData } = {\n    Standard: {\n        boardRows: 5,\n        boardColumns: 5,\n        cards: 8,\n        startCards: 1,\n        assassins: 1,\n        startColor: 'Random',\n        mode: 'Standard',\n        seed: ''\n    },\n    Duet: {\n        boardRows: 5,\n        boardColumns: 5,\n        cards: 9,\n        startCards: 0,\n        assassins: 3,\n        startColor: 'Random',\n        mode: 'Duet',\n        seed: ''\n    }\n};\n\n\nconst BoardForm: React.FC<BoardFormProps> = ({ formData, setFormData }) => {\n    const startValues = formData\n        ? formData\n        : {\n            ...defaultFormValues.Standard,\n            seed: randomSeed()\n        };\n\n    // for animations\n    const [proxyGameMode, setProxyGameMode] = useState(startValues.mode);\n    const [mode, _setGameMode] = useState(startValues.mode);\n\n    const [rows, setRows] = useState(startValues.boardRows);\n    const [columns, setColumns] = useState(startValues.boardColumns);\n    const [cards, setCards] = useState(startValues.cards);\n    const [startCards, setStartCards] = useState(startValues.startCards);\n    const [assassins, setAssassins] = useState(startValues.assassins);\n    const [startColor, setStartColor] = useState(startValues.startColor);\n    const [seed, setSeed] = useState(startValues.seed);\n\n    const [newSeedOnGenerate, setNewSeedOnGenerate] = useState<boolean>(true);\n    const [closeConfigOnGenerate, setCloseConfigOnGenerate] = useState<boolean>(true);\n    const [error, setError] = useState<string | null>(null);\n    const [errorKey, setErrorKey] = useState<number>(0);\n\n    const [isCollapsibleOpen, setIsCollapsibleOpen] = useState<boolean>(true);\n    const [resetFormInputs, setResetFormInputs] = useState<boolean>(false);\n\n    const setGameMode = (newMode: GameMode) => {\n        if (mode !== newMode) {\n            const defaults = defaultFormValues[newMode];\n            setRows(defaults.boardRows);\n            setColumns(defaults.boardColumns);\n            setCards(defaults.cards);\n            setStartCards(defaults.startCards);\n            setAssassins(defaults.assassins);\n            setStartColor(defaults.startColor);\n            setResetFormInputs(false);\n        }\n        _setGameMode(newMode);\n    };\n\n    const onFormSubmit: FormEventHandler<HTMLFormElement> = (e) => {\n        e.preventDefault();\n        setErrorKey(prev => prev + 1);\n        const formData: any = {};\n        for (let [k, v] of (new FormData(e.currentTarget)).entries()) {\n            formData[k] = /^\\d+$/.test(v as string) ? parseInt(v as string) : v;\n        }\n\n        if (newSeedOnGenerate) {\n            const newSeed = randomSeed();\n            formData.seed = newSeed;\n            setSeed(newSeed);\n        }\n        const totalCards = formData.boardRows * formData.boardColumns;\n\n        const configuredCards = mode === 'Standard' \n            ? formData.cards * 2 + formData.startCards + formData.assassins\n            : formData.cards + formData.assassins;\n        if (configuredCards > totalCards) {\n            setError(`Too many configured cards (${configuredCards}) for this board (${formData.boardRows}x${formData.boardColumns}=${totalCards})`);\n            return false;\n        } else {\n            if (closeConfigOnGenerate) {\n                setIsCollapsibleOpen(false);\n            }\n            setFormData(formData);\n            setError(null);\n        }\n    };\n\n    return (\n        <Collapsible \n            tabIndex={0}\n            open={isCollapsibleOpen}\n            onTriggerOpening={() => setIsCollapsibleOpen(true)}\n            onTriggerClosing={() => setIsCollapsibleOpen(false)}\n            trigger={<CollapseButton isOpen={isCollapsibleOpen} label=\"Game Config\"/>}\n            containerElementProps={{style: PAGE_SECTION_STYLE}}\n            transitionTime={COLLAPSIBLE_TIME}\n            easing={COLLAPSIBLE_EASING}\n        >\n            <form onSubmit={onFormSubmit}>\n                <div style={{\n                    display: 'flex',\n                    flexWrap: 'wrap'\n                }}>\n                    {/* TODO confirm board reset */}\n                    <InputCard title=\"Game Mode\">\n                        <RadioInput labels={['Standard', 'Duet']} name=\"mode\" value={mode} onChange={(e) => {\n                            if (!window.confirm('This will reset config to default values - are you sure?')) {\n                                return;\n                            }\n                            setProxyGameMode(e.target.value as any);\n                            setResetFormInputs(true);\n                        }} />\n                    </InputCard>\n                </div>\n                <hr style={{ height: '1px', border: 'none', background: '#555', margin: '24px 0' }} />\n                <Collapsible \n                    trigger=\"\" \n                    open={!resetFormInputs} onClose={() => setGameMode(proxyGameMode)}\n                    transitionTime={COLLAPSIBLE_TIME}\n                    easing={COLLAPSIBLE_EASING}\n                >\n                    <div style={{\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        marginBottom: '24px'\n                    }}>\n                        \n                        <InputCard title=\"Board\">\n                            <BasicInput label=\"Rows\" type=\"number\" name=\"boardRows\" value={rows} onChange={(e) => setRows(parseInt(e.target.value))} defaultValue={defaultFormValues[mode].boardRows} />\n                            <BasicInput label=\"Columns\" type=\"number\" name=\"boardColumns\" value={columns} onChange={(e) => setColumns(parseInt(e.target.value))} defaultValue={defaultFormValues[mode].boardColumns} />\n                        </InputCard>\n                        <InputCard title=\"Game\">\n                            <BasicInput label=\"Team Cards\" type=\"number\" name=\"cards\" value={cards} onChange={(e) => setCards(parseInt(e.target.value))} defaultValue={suggestedCards(rows, columns, mode)} />\n                            <BasicInput label=\"Assassins\" type=\"number\" name=\"assassins\" value={assassins} onChange={(e) => setAssassins(parseInt(e.target.value))} defaultValue={suggestedAssassins(rows, columns, mode)} />\n                        </InputCard>\n                        {mode==='Standard' && <InputCard title=\"Standard Mode\">\n                            <BasicInput label=\"Start Handicap\" type=\"number\" name=\"startCards\" value={startCards} onChange={(e) => setStartCards(parseInt(e.target.value))} defaultValue={defaultFormValues[mode].startCards} />\n                            <RadioInput title=\"Starting Team\" labels={['Red', 'Blue', 'Random']} name=\"startColor\" value={startColor} onChange={(e) => setStartColor(e.target.value as any)} defaultValue=\"Random\" />\n                        </InputCard>}\n                        <InputCard title=\"Random\">\n                            <SeedInput name=\"seed\" value={seed} onChange={(e) => setSeed(e.target.value)}/>\n                        </InputCard>\n                        \n                    </div>\n                    <button style={{ \n                        background: typeToColor[mode === 'Standard' ? 'Blue' : 'DuetCorrect'], \n                        marginRight: '12px' \n                    }}>\n                        Generate\n                    </button>\n                    <label style={{ marginRight: '12px', color: '#888', fontSize: '14px' }}>\n                        <input type=\"checkbox\" checked={newSeedOnGenerate} onChange={(e) => setNewSeedOnGenerate(e.target.checked)}/>\n                        with a new random seed\n                    </label>\n                    <label style={{ marginRight: '12px', color: '#888', fontSize: '14px' }}>\n                        <input type=\"checkbox\" checked={closeConfigOnGenerate} onChange={(e) => setCloseConfigOnGenerate(e.target.checked)}/>\n                        Close config?\n                    </label>\n\n                    <button\n                        type=\"button\"\n                        onClick={() => {\n                            const defaults = defaultFormValues[mode];\n                            setRows(defaults.boardRows);\n                            setColumns(defaults.boardColumns);\n                            setCards(defaults.cards);\n                            setStartCards(defaults.startCards);\n                            setAssassins(defaults.assassins);\n                            setStartColor(defaults.startColor);\n                            setSeed(randomSeed());\n                        }}\n                        style={{ \n                            background: typeToColor[mode === 'Standard' ? 'Red' : 'Bystander'],\n                            marginRight: '12px' \n                        }}>\n                        Reset Defaults\n                    </button>\n                </Collapsible>\n                <div \n                    key={errorKey} \n                    style={{ \n                        color: '#c9461d', \n                        animationName: 'fadeOut', \n                        animationDuration: '6s', \n                        animationFillMode: 'forwards',\n                        marginTop: '16px'\n                    }}>\n                        {error}\n                </div>\n            </form>\n        </Collapsible>\n    );\n};\n\nconst suggestedCards = (rows: number, columns: number, gameMode: GameMode) => {\n    if (!rows || !columns) {\n        return defaultFormValues[gameMode].cards;\n    }\n    if (gameMode === 'Standard') {\n        return Math.floor(rows * columns/3);\n    } else {\n        return Math.floor(rows * columns/3) + 1;\n    }\n};\n\nconst suggestedAssassins = (rows: number, columns: number, gameMode: GameMode) => \n    Math.floor(rows * columns / (gameMode === 'Standard' ? 15 : 8)) || defaultFormValues[gameMode].assassins;\n\nexport const randomSeed = (): string => Math.random().toString(36).slice(2);\n\nexport function useControllableState<T>(value: T, initialValue?: T | undefined): [state: T, setState: (action: React.SetStateAction<T>) => void] {\n    const [stateValue, setState] = useState(initialValue || value);\n    const effectiveValue = value !== undefined ? value : stateValue;\n    return [effectiveValue, setState];\n}\n\nexport default BoardForm;\n","import { CodenamesFormData } from './BoardForm/BoardForm';\n\nexport type FormDataVersion = 0 | 1 | 2;\n// eslint-disable-next-line\nconst UNKNOWN_VERSION = 0;\nconst WRITE_VERSION = 2;\n\nconst v1FormDataKeys = [\n    'boardRows',\n    'boardColumns',\n    'cards',\n    'startCards',\n    'startColor',\n    'assassins',\n    'seed'\n].sort();\n\nconst v2FormDataKeys = [\n    ...v1FormDataKeys,\n    'mode',\n].sort();\n\nconst formDataKeys = [\n    [],\n    v1FormDataKeys,\n    v2FormDataKeys\n];\n\nexport const encodeFormData = (formData: CodenamesFormData): string => {\n    const orderedValues = formDataKeys[WRITE_VERSION]\n                            .map((k): [k: string, v: string | number] => [k, formData[k]])\n                            .sort(([k1], [k2]) => k1.localeCompare(k2))\n                            .map(([_, v]) => v);\n    return btoa(JSON.stringify([WRITE_VERSION, ...orderedValues]));\n}\n\nexport const decodeFormData = (slug: string): CodenamesFormData | undefined => {\n    let orderedValues: any[] = [];\n    let version: FormDataVersion = 0;\n    try {\n        [version, ...orderedValues] = JSON.parse(atob(slug));\n    } catch {\n        return undefined;\n    }\n\n    switch(version) {\n        case 1:\n            return v1DecodeFormData(orderedValues);\n        case 2:\n            return v2DecodeFormData(orderedValues);\n        default:\n            return undefined;\n    }\n};\n\nconst v1DecodeFormData = (orderedValues: any[]): CodenamesFormData | undefined => {\n    const maybeFormData = decodeWithKeys(orderedValues, v1FormDataKeys);\n    if (maybeFormData) {\n        maybeFormData.mode = 'Standard';\n    }\n\n    return validate(maybeFormData);\n}\n\nconst v2DecodeFormData = (orderedValues: any[]): CodenamesFormData | undefined => \n    validate(decodeWithKeys(orderedValues, v2FormDataKeys));\n\nconst decodeWithKeys = (orderedValues: any[], orderedKeys: string[]): CodenamesFormData | undefined => {\n    if (orderedValues && orderedValues.length <= orderedKeys.length) {\n        const ret: any = {};\n        orderedKeys.forEach((key, i) => ret[key] = orderedValues[i]);\n        return ret;\n    }\n\n    return undefined;\n};\n\nconst validate = (maybeFormData: any): CodenamesFormData | undefined => {\n    if (isValidFormData(maybeFormData)) {\n        return maybeFormData;\n    }\n    return undefined;\n};\n\nconst isValidFormData = (maybeFormData: any): boolean => (\n    maybeFormData && \n    maybeFormData.boardRows && \n    maybeFormData.boardColumns && \n    maybeFormData.cards && \n    !isNaN(maybeFormData.startCards) && \n    !isNaN(maybeFormData.assassins) && \n    maybeFormData.seed &&\n    maybeFormData.mode\n);\n","import chunk from 'lodash/chunk';\nimport fill from 'lodash/fill';\nimport seedrandom from 'seedrandom';\nimport { CodenamesFormData, GameMode } from './BoardForm/BoardForm';\n\n\nexport type CardType = 'Blue' | 'Red' | 'Bystander' | 'Assassin' | 'DuetCorrect';\nexport interface BoardLayout<M extends GameMode, C> {\n    mode: M;\n    cards: C[][];\n    startColor: CardType;\n    info?: string[];\n}\n\nexport type StandardLayout = BoardLayout<'Standard', CardType>\nexport type DuetLayout = BoardLayout<'Duet', CardType[]>\n\nexport type AnyBoardLayout = \n    StandardLayout | \n    DuetLayout;\n\nexport type DisplayableLayout = BoardLayout<any, CardType>\n\nexport const createLayout = (formData: CodenamesFormData): AnyBoardLayout => (\n    formData.mode === 'Standard'\n        ? createStandardLayout(formData)\n        : createDuetLayout(formData)\n);\nconst createStandardLayout = ({\n    boardRows, boardColumns, cards, startCards, startColor, assassins, seed\n}: CodenamesFormData): StandardLayout => {\n    const rand = seededRandomInt(seed);\n\n    const actualStartColor = getStartColor(startColor, seed);\n    const blueCards = cards + (actualStartColor === 'Blue' ? startCards : 0);\n    const redCards = cards + (actualStartColor === 'Red' ? startCards : 0);\n\n    const flatLayout: CardType[] = fill(Array(boardRows * boardColumns), 'Bystander');\n    let step = 0;\n    step = _fill(flatLayout, 'Blue', step, step + blueCards);\n    step = _fill(flatLayout, 'Red', step, step + redCards);\n    _fill(flatLayout, 'Assassin', step, step + assassins);\n\n    shuffle(flatLayout, rand);\n\n    return { mode: 'Standard', cards: chunk(flatLayout, boardColumns), startColor: getStartColor(startColor, seed) };\n};\n\nconst createDuetLayout = ({\n    boardRows, boardColumns, cards, assassins, seed,\n}: CodenamesFormData): DuetLayout => {\n    const rand = seededRandomInt(seed);\n\n    const boardSize = boardRows * boardColumns;\n    const bystanders = boardSize - (cards + assassins);\n\n    const goalBothCorrect = Math.floor(cards/3)\n    const goalCorrectAssassin = Math.floor(assassins/3);\n    const goalCorrectBystander = Math.floor(bystanders/2);\n\n    const bothCorrect = Math.max(goalBothCorrect, cards - (goalCorrectAssassin + goalCorrectBystander));\n\n    let correctBystanders;\n    let correctAssassins;\n    if (bystanders < assassins) {\n        correctBystanders = Math.min(cards - bothCorrect, goalCorrectBystander);\n        correctAssassins = cards - (bothCorrect + correctBystanders);\n    } else {\n        correctAssassins = Math.min(cards - bothCorrect, goalCorrectAssassin);\n        correctBystanders = cards - (bothCorrect + correctAssassins);\n    }\n\n    const remainingAssassins = assassins - correctAssassins;\n    const remainingBystanders = bystanders - correctBystanders;\n\n    const bystanderAssassins = Math.min(Math.floor(remainingAssassins/2), Math.floor(remainingBystanders/2));\n    const bothAssassins = remainingAssassins - bystanderAssassins;\n    const bothBystander = remainingBystanders - bystanderAssassins;\n\n    const flatLayout: CardType[][] = fill(Array(boardSize), ['Bystander', 'Bystander']);\n    let step = 0;\n    step = _fill(flatLayout, ['DuetCorrect', 'DuetCorrect'], step, step + bothCorrect);\n    step = _fill(flatLayout, ['DuetCorrect', 'Assassin'], step, step + correctAssassins);\n    step = _fill(flatLayout, ['Assassin', 'DuetCorrect'], step, step + correctAssassins);\n    step = _fill(flatLayout, ['DuetCorrect', 'Bystander'], step, step + correctBystanders);\n    step = _fill(flatLayout, ['Bystander', 'DuetCorrect'], step, step + correctBystanders);\n    step = _fill(flatLayout, ['Assassin', 'Assassin'], step, step + bothAssassins);\n    step = _fill(flatLayout, ['Bystander', 'Assassin'], step, step + bystanderAssassins);\n    _fill(flatLayout, ['Assassin', 'Bystander'], step, step + bystanderAssassins);\n\n    shuffle(flatLayout, rand);\n    return {\n        mode: 'Duet',\n        cards: chunk(flatLayout, boardColumns),\n        startColor: 'DuetCorrect',\n        info: [\n            `Correct / Correct: ${bothCorrect} total`,\n            `Correct / Assassin: ${correctAssassins} per team`,\n            `Correct / Bystander: ${correctBystanders} per team`,\n            `Assassin / Assassin: ${bothAssassins} total`,\n            `Assassin / Bystander: ${bystanderAssassins} per team`,\n            `Bystander / Bystander: ${bothBystander} total`,\n        ]\n    };\n};\n\nexport const getStartColor = (\n    startColor: 'Random' | 'Blue' | 'Red',\n    seed: string\n): 'Blue' | 'Red' => {\n    if (startColor === 'Random') {\n        return seededRandomInt(seed + 'start')(0, 1) ? 'Blue' : 'Red';\n    } else {\n        return startColor;\n    }\n};\n\n// fill and return end pos\nfunction _fill<T>(arr: T[], value: T, start: number, end: number): number {\n    fill(arr, value, start, end);\n    return end;\n}\nfunction shuffle<T>(arr: T[], rand: (min: number, max: number) => number): void {\n    for (var i = arr.length - 1; i > 0; i--) {\n        const j = rand(0, i);\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n}\n\nexport const seededRandomInt = (seed: string): (min: number, max: number) => number => {\n    const rand = seedrandom(seed);\n    return (min: number, max: number): number => Math.floor(rand() * (max - min + 1) + min);\n};\n","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCopy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 442 442\",\n    style: {\n      enableBackground: \"new 0 0 442 442\"\n    },\n    xmlSpace: \"preserve\",\n    fill: \"#EEE\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"291,0 51,0 51,332 121,332 121,80 291,80  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"306,125 306,195 376,195  \"\n  }), /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"276,225 276,110 151,110 151,442 391,442 391,225  \"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.f212b952.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15, _g16;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgShare(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 458.624 458.624\",\n    style: {\n      enableBackground: \"new 0 0 458.624 458.624\"\n    },\n    xmlSpace: \"preserve\",\n    fill: \"#EEE\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M339.588,314.529c-14.215,0-27.456,4.133-38.621,11.239l-112.682-78.67c1.809-6.315,2.798-12.976,2.798-19.871 c0-6.896-0.989-13.557-2.798-19.871l109.64-76.547c11.764,8.356,26.133,13.286,41.662,13.286c39.79,0,72.047-32.257,72.047-72.047 C411.634,32.258,379.378,0,339.588,0c-39.79,0-72.047,32.257-72.047,72.047c0,5.255,0.578,10.373,1.646,15.308l-112.424,78.491 c-10.974-6.759-23.892-10.666-37.727-10.666c-39.79,0-72.047,32.257-72.047,72.047s32.256,72.047,72.047,72.047 c13.834,0,26.753-3.907,37.727-10.666l113.292,79.097c-1.629,6.017-2.514,12.34-2.514,18.872c0,39.79,32.257,72.047,72.047,72.047 c39.79,0,72.047-32.257,72.047-72.047C411.635,346.787,379.378,314.529,339.588,314.529z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", null)), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", null)), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", null)), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", null)), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", null)), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", null)), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", null)), _g9 || (_g9 = /*#__PURE__*/React.createElement(\"g\", null)), _g10 || (_g10 = /*#__PURE__*/React.createElement(\"g\", null)), _g11 || (_g11 = /*#__PURE__*/React.createElement(\"g\", null)), _g12 || (_g12 = /*#__PURE__*/React.createElement(\"g\", null)), _g13 || (_g13 = /*#__PURE__*/React.createElement(\"g\", null)), _g14 || (_g14 = /*#__PURE__*/React.createElement(\"g\", null)), _g15 || (_g15 = /*#__PURE__*/React.createElement(\"g\", null)), _g16 || (_g16 = /*#__PURE__*/React.createElement(\"g\", null)));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgShare);\nexport default __webpack_public_path__ + \"static/media/share.6eed6cfd.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from \"react\";\nimport { ReactComponent as CopyIcon } from './img/copy.svg';\nimport { ReactComponent as ShareIcon } from './img/share.svg';\n\nexport interface LinkSharerProps {\n\n}\n\nconst iconStyle = {\n    width: '18px',\n    height: '18px',\n    marginLeft: '12px',\n    cursor: 'pointer',\n    paddingTop: '8px'\n}\n\nconst LinkSharer: React.FC<LinkSharerProps> = () => {\n    const [copied, setCopied] = useState<number>(0);\n    return (\n            <div style={{\n                marginBottom: '48px',\n                display: 'flex', \n                alignItems: 'center', \n                justifyContent: 'center',\n                minWidth: '634px'\n            }}>\n                <input disabled value={window.location.href} style={{\n                    minWidth: '546px'\n                }}/>\n                <div style={{position: 'relative'}}>\n                    <CopyIcon \n                        style={iconStyle} \n                        onClick={() => {\n                            navigator.clipboard.writeText(window.location.href);\n                            setCopied(prev => prev + 1);\n                        }}\n                    />\n                    {(copied || null) && <div key={copied} style={{ \n                        position: 'absolute', \n                        left: '12px', \n                        bottom: '-24px', \n                        fontSize: '12px',\n                        whiteSpace: 'nowrap',\n                        animationName: 'fadeOut',\n                        animationDuration: '2s',\n                        animationFillMode: 'forwards',\n                        textAlign: 'right'\n                    }}>\n                        Copied to clipboard\n                    </div>}\n                </div>\n                {navigator['share'] && <ShareIcon style={iconStyle} onClick={() => {\n                    navigator.share({\n                        title: 'Codenames Board Link',\n                        text: 'Codenames Board Link',\n                        url: window.location.href,\n                    });\n                }}/>}\n            </div>\n\n    );\n};\n\nexport default LinkSharer;","import { CSSProperties, useState } from 'react';\nimport BoardView from './BoardView';\nimport BoardForm, { CodenamesFormData } from './BoardForm/BoardForm';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router-dom';\nimport { decodeFormData, encodeFormData } from './BoardEncoding';\nimport { createLayout } from \"./BoardLayout\";\nimport LinkSharer from './LinkSharer';\n\nexport const PAGE_SECTION_STYLE: CSSProperties = {\n    marginBottom: '48px',\n    border: '1px solid #555',\n    borderRadius: '16px',\n    padding: '24px',\n    boxShadow: '8px 8px 12px #2b2b2b',\n    minWidth: '586px',\n    flexGrow: 1,\n};\n\nconst BoardGenerator = () => {\n    const params = useParams();\n    const slug: string | undefined = params.slug;\n    let initialFormData = undefined;\n    if (slug) {\n        initialFormData = decodeFormData(slug);\n    }\n    const [formData, setFormData] = useState<CodenamesFormData | undefined>(initialFormData);\n    const navigate = useNavigate();\n\n    const setFormDataAndHash = (newFormData: CodenamesFormData) => {\n        setFormData(newFormData);\n        navigate(`/${encodeFormData(newFormData)}`)\n    }\n    \n    return (\n        <div style={{ height: '100%', margin: '48px' }}>\n            <h1>Codenames Board Generator</h1>\n            <a \n                href=\"https://github.com/tristanjohnson849/codenames-scaler\"\n                style={{ \n                    position: 'absolute',\n                    margin: '60px',\n                    top: '0px', \n                    right: '0px', \n                    color: '#777', \n                    fontSize: '18px',\n                    textDecoration: 'none'\n                }}\n                target=\"blank\"\n            >\n                Source\n            </a>\n            <div style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'stretch',\n                maxWidth: '1000px',\n                margin: 'auto'\n            }}>\n                <BoardForm formData={formData} setFormData={(formData) => setFormDataAndHash(formData)}/>\n                {formData && <LinkSharer/>}\n                {formData && <BoardView layout={createLayout(formData)}/>}\n            </div>\n        </div>\n    );\n}\n\nexport default BoardGenerator;\n","import React from 'react';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport BoardGenerator from './BoardGenerator';\n\nconst App = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"\" element={<BoardGenerator/>}/>\n      <Route path=\":slug\" element={<BoardGenerator/>}/>\n    </Routes>\n  </HashRouter>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}